package vista;

import conexion.Conexion;
import controlador.Ctrl_Producto;
import java.sql.Connection;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import javax.swing.JTable;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import modelo.Producto;
import java.sql.Statement;





/**
 *
 * @author GL753VD
 */
public class InterGestionProductos extends javax.swing.JInternalFrame {

        private int idProducto;
        int obtenerIdProveedorCombo = 0;
        
    public InterGestionProductos() {
        initComponents();
        this.setSize(new Dimension (700, 400));
        this.setTitle("Administrar Productos");
        //Insertar tabla
        this.CargarTablaProductos();
        this.CargarComboProveedor();
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Administrar_Clientes = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        TProductos = new javax.swing.JScrollPane();
        TablaProductos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        Actualizar = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        Nombre = new javax.swing.JLabel();
        Apellido = new javax.swing.JLabel();
        RFC = new javax.swing.JLabel();
        Telefono = new javax.swing.JLabel();
        TextNombre = new javax.swing.JTextField();
        TextDescripcion = new javax.swing.JTextField();
        TextPrecio = new javax.swing.JTextField();
        Cantidadd = new javax.swing.JLabel();
        TextCantidad = new javax.swing.JTextField();
        ComboBoxProveedor = new javax.swing.JComboBox<>();
        Fondo = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Administrar_Clientes.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Administrar_Clientes.setForeground(new java.awt.Color(255, 255, 255));
        Administrar_Clientes.setText("Administrar Productos");
        getContentPane().add(Administrar_Clientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TProductos.setViewportView(TablaProductos);

        jPanel1.add(TProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 510, 190));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 510, 190));

        jPanel2.setBackground(new java.awt.Color(0, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Actualizar.setBackground(new java.awt.Color(102, 255, 102));
        Actualizar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Actualizar.setText("Actualizar");
        Actualizar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarActionPerformed(evt);
            }
        });
        jPanel2.add(Actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 100, -1));

        Eliminar.setBackground(new java.awt.Color(255, 51, 51));
        Eliminar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Eliminar.setText("Eliminar");
        Eliminar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });
        jPanel2.add(Eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 100, 20));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 130, 120, 80));

        Nombre.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Nombre.setForeground(new java.awt.Color(255, 255, 255));
        Nombre.setText("Nombre");
        getContentPane().add(Nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        Apellido.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Apellido.setForeground(new java.awt.Color(255, 255, 255));
        Apellido.setText("Descripcion");
        getContentPane().add(Apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, -1, -1));

        RFC.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        RFC.setForeground(new java.awt.Color(255, 255, 255));
        RFC.setText("Precio");
        getContentPane().add(RFC, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 270, -1, -1));

        Telefono.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Telefono.setForeground(new java.awt.Color(255, 255, 255));
        Telefono.setText("Proveedor");
        getContentPane().add(Telefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 330, 90, 20));

        TextNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextNombreActionPerformed(evt);
            }
        });
        getContentPane().add(TextNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, 140, -1));

        TextDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextDescripcionActionPerformed(evt);
            }
        });
        getContentPane().add(TextDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 310, 140, -1));

        TextPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextPrecioActionPerformed(evt);
            }
        });
        getContentPane().add(TextPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 270, 90, -1));

        Cantidadd.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Cantidadd.setForeground(new java.awt.Color(255, 255, 255));
        Cantidadd.setText("Cantidad");
        getContentPane().add(Cantidadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 270, -1, -1));

        TextCantidad.setEnabled(false);
        TextCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextCantidadActionPerformed(evt);
            }
        });
        getContentPane().add(TextCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 270, 110, -1));

        ComboBoxProveedor.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ComboBoxProveedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Proveedor:", "Item 2", "Item 3", "Item 4" }));
        ComboBoxProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxProveedorActionPerformed(evt);
            }
        });
        getContentPane().add(ComboBoxProveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 320, 160, 30));

        Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/PIXELS.jpg"))); // NOI18N
        getContentPane().add(Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 410));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarActionPerformed
        // TODO add your handling code here:
        Producto producto = new Producto();
        Ctrl_Producto controlProducto = new Ctrl_Producto();
        
        String proveedor = "";
        
        proveedor = ComboBoxProveedor.getSelectedItem().toString().trim();

        //validar campos
        if (TextNombre.getText().isEmpty() || TextDescripcion.getText().isEmpty() || TextCantidad.getText().isEmpty() || TextPrecio.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
            
        } else {
        
                if (proveedor.equalsIgnoreCase("Seleccione proveedor:")) {
                    JOptionPane.showMessageDialog(null, "Seleccione proveedor");
                } else {
                    
                            producto.setNombre(TextNombre.getText().trim());
                            producto.setCantidad(Integer.parseInt(TextCantidad.getText().trim()));
                            String precioTXT = "";
                            double Precio = 0.0;
                            precioTXT = TextPrecio.getText().trim();
                            boolean aux = false;
                            /*
                            *Si el usuario ingresa , (coma) como punto decimal,
                            lo transformamos a punto (.)
                             */
                            for (int i = 0; i < precioTXT.length(); i++) {// for retona una cadena
                                if (precioTXT.charAt(i) == ',') {   //TXT es una cadena de texto y el for recorre punto por punto
                                    String precioNuevo = precioTXT.replace(",", ".");
                                    Precio = Double.parseDouble(precioNuevo);
                                    aux = true;
                                }
                            }
                            //evaluar la condicion
                            if (aux == true) {
                                producto.setPrecio(Precio);
                            } else {
                                Precio = Double.parseDouble(precioTXT);
                                producto.setPrecio(Precio);
                            }
                              producto.setDescripcion(TextDescripcion.getText().trim());
                            //idProveedor - cargar metodo que obtiene el id de Proveedor
                            this.IdProveedor();
                            producto.setIdProveedor(obtenerIdProveedorCombo);
                            

                            if (controlProducto.actualizar(producto, idProducto)) {
                                JOptionPane.showMessageDialog(null, "Registro Actualizado");
                                
                                

                                this.CargarComboProveedor();
                                this.CargarTablaProductos();
                                this.Limpiar();
                            } else {
                                JOptionPane.showMessageDialog(null, "Error al Actualizar");
                            }

                }
             
        }
        
        
    }//GEN-LAST:event_ActualizarActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        // TODO add your handling code here:
         Ctrl_Producto controlProducto = new Ctrl_Producto();
        if (idProducto == 0) {
            JOptionPane.showMessageDialog(null, "Seleccione un producto");
        } else {
            if (!controlProducto.eliminar(idProducto)) {
                JOptionPane.showMessageDialog(null, "Producto Eliminado");
                this.CargarTablaProductos();
                this.CargarComboProveedor();
                this.Limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al eliminar producto");
                this.Limpiar();
            }
        }
    }//GEN-LAST:event_EliminarActionPerformed

    private void TextPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextPrecioActionPerformed

    private void TextNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextNombreActionPerformed

    private void TextDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextDescripcionActionPerformed

    private void TextCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextCantidadActionPerformed

    private void ComboBoxProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxProveedorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Actualizar;
    private javax.swing.JLabel Administrar_Clientes;
    private javax.swing.JLabel Apellido;
    private javax.swing.JLabel Cantidadd;
    private javax.swing.JComboBox<String> ComboBoxProveedor;
    private javax.swing.JButton Eliminar;
    private javax.swing.JLabel Fondo;
    private javax.swing.JLabel Nombre;
    private javax.swing.JLabel RFC;
    public static javax.swing.JScrollPane TProductos;
    public static javax.swing.JTable TablaProductos;
    private javax.swing.JLabel Telefono;
    private javax.swing.JTextField TextCantidad;
    private javax.swing.JTextField TextDescripcion;
    private javax.swing.JTextField TextNombre;
    private javax.swing.JTextField TextPrecio;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
  //Metodo para limpiar
    private void Limpiar() {
        TextNombre.setText("");
        TextDescripcion.setText("");
        TextCantidad.setText("");
        TextPrecio.setText("");
        ComboBoxProveedor.setSelectedItem("Seleccione proveedor");
        
    }

//Cargar proveedores en ComboBox
    
    
    private void CargarComboProveedor() {
        Connection cn = Conexion.conectar();
        String sql = "select * from Proveedor";
        Statement st;
        try {

            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            ComboBoxProveedor.removeAllItems();
            ComboBoxProveedor.addItem("Seleccione proveedor:");
            while (rs.next()) {
                ComboBoxProveedor.addItem(rs.getString("empresa"));//de la tabla Proveedor llamamos a empresa
            }
            cn.close();

        } catch (SQLException e) {
            System.out.println("Error al cargar proveedor");
        }
    }
//Para mostrar todos los Productos Agregados
   String descripcionProveedor = "";
    double precio = 0.0;
    //Mostrar todos los productos o tabla productos de bbdd
   private void CargarTablaProductos(){
       Connection con = Conexion.conectar();
       DefaultTableModel model = new DefaultTableModel();
       String sql = "select  p.idProducto,p.nombre, p.descripcion,p.Cantidad,p.Precio,c.empresa from Producto As p, Proveedor As c where p.idProveedor =c.idProveedor;";
       Statement st;
       
       try {
           st = con.createStatement();
           ResultSet rs = st.executeQuery(sql);
           InterGestionProductos.TablaProductos = new JTable(model);
           InterGestionProductos.TProductos.setViewportView(InterGestionProductos.TablaProductos);
           //columnas asignadas para mostrar en gestion productos
           model.addColumn("idProducto");
           model.addColumn("nombre");
           model.addColumn("descripcion");
           model.addColumn("Cantidad");
           model.addColumn("Precio");
           model.addColumn("Proveedor");

           
           while(rs.next()){
               
                Object fila[] = new Object [6];
                
                for(int i =0; i <6; i++){
                   fila[i] = rs.getObject(i + 1); 
                }
                model.addRow(fila);
           
           }
           con.close();
           
       } catch (SQLException e) {
           System.out.println("Error al llenar la tabla Producto" + e);
           
       }
      //evento para obtener campo al cual el usuario da click
        //y obtener la interfaz que mostrara la informacion general
        TablaProductos.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = TablaProductos.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    idProducto = (int) model.getValueAt(fila_point, columna_point);
                    EnviarDatosProductoSeleccionado(idProducto);//metodo
                }
            }
        });
    
    
    }
   
   
    /*
     * **************************************************
     * Metodo que envia datos seleccionados
     * **************************************************
     */
    private void EnviarDatosProductoSeleccionado(int idProducto) {
        try {
            Connection con = Conexion.conectar();
            PreparedStatement pst = con.prepareStatement(
                    "select * from Producto where idProducto = '" + idProducto + "'");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                TextNombre.setText(rs.getString("nombre"));
                TextDescripcion.setText(rs.getString("descripcion"));
                TextCantidad.setText(rs.getString("Cantidad"));
                TextPrecio.setText(rs.getString("Precio"));
                
               
                int idProve = rs.getInt("idProveedor");
                ComboBoxProveedor.setSelectedItem(relacionarProveedor(idProve));
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al seleccionar producto: " + e);
        }
    }
 
   // metodo para relacionar proveedor
    
    private String relacionarProveedor(int idProveedor) {

        String sql = "select empresa from Proveedor where idProveedor = '" + idProveedor + "'";
        Statement st;
        try {
            Connection cn = Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                descripcionProveedor = rs.getString("empresa");
            }
            cn.close();

        } catch (SQLException e) {
            System.out.println("Error al obtener el id de proveedor");
        }
        return descripcionProveedor;
    }
    //metodo para obtener idProveedor
    
    private int IdProveedor() {
        String sql = "select * from Proveedor where empresa = '" + this.ComboBoxProveedor.getSelectedItem() + "'";
        Statement st;
        try {
            java.sql.Connection cn = Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                obtenerIdProveedorCombo = rs.getInt("idProveedor");
            }
        } catch (SQLException e) {
            System.out.println("Error al obener id proveedor");
        }
        return obtenerIdProveedorCombo;
    }
    
}
