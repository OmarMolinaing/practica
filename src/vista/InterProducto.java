package vista;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import conexion.Conexion;
import controlador.Ctrl_Producto;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import modelo.Producto;


/**
 *
 * @author GL753VD
 */
public class InterProducto extends javax.swing.JInternalFrame {
    
    int obtenerIdProveedorCombo = 0;

    public InterProducto() {
        initComponents();
        this.setSize(new Dimension(400,300));
        this.setTitle("Nuevo Producto");
        this.CargarComboProveedores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        TextNombre = new javax.swing.JTextField();
        TextCantidad = new javax.swing.JTextField();
        Guardar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        TextPrecio = new javax.swing.JTextField();
        ComboBoxProveedor = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        TextDescripcion = new javax.swing.JTextField();
        Fondo = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nuevo Producto");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Cantidad");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Precio");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));

        TextNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextNombreActionPerformed(evt);
            }
        });
        getContentPane().add(TextNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 170, 30));

        TextCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextCantidadActionPerformed(evt);
            }
        });
        getContentPane().add(TextCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 180, 30));

        Guardar.setBackground(new java.awt.Color(153, 255, 255));
        Guardar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });
        getContentPane().add(Guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 220, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Proveedor");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        TextPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextPrecioActionPerformed(evt);
            }
        });
        getContentPane().add(TextPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, 150, 30));

        ComboBoxProveedor.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ComboBoxProveedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Proveedor:", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(ComboBoxProveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, 180, 30));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Descripcion");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        TextDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextDescripcionActionPerformed(evt);
            }
        });
        getContentPane().add(TextDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 150, 30));

        Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/PIXELS.jpg"))); // NOI18N
        getContentPane().add(Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextNombreActionPerformed

    private void TextCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextCantidadActionPerformed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        // TODO add your handling code here:
       
        Producto producto = new Producto();
        Ctrl_Producto controlProducto = new Ctrl_Producto();
        
        String proveedor = "";
        
        proveedor = ComboBoxProveedor.getSelectedItem().toString().trim();

        //validar campos
        if (TextNombre.getText().equals("") || TextDescripcion.getText().equals("") || TextCantidad.getText().equals("") || TextPrecio.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
            
        } else {
            //consulta para ver si el producto ya existe
            if (!controlProducto.existeProducto(TextNombre.getText().trim())) {
                if (proveedor.equalsIgnoreCase("Seleccione proveedor:")) {
                    JOptionPane.showMessageDialog(null, "Seleccione proveedor");
                } else {
                    
                            producto.setNombre(TextNombre.getText().trim());
                            producto.setDescripcion(TextDescripcion.getText().trim());
                            producto.setCantidad(Integer.parseInt(TextCantidad.getText().trim()));
                            String precioTXT = "";
                            double Precio = 0.0;
                            precioTXT = TextPrecio.getText().trim();
                            boolean aux = false;
                    if (proveedor.equalsIgnoreCase("Seleccione proveedor:")) {
                        JOptionPane.showMessageDialog(null, "Seleccione proveedor");
                    } else {
                       
                            /*
                            *Si el usuario ingresa , (coma) como punto decimal,
                            lo transformamos a punto (.)
                             */
                            for (int i = 0; i < precioTXT.length(); i++) {// for retona una cadena
                                if (precioTXT.charAt(i) == ',') {   //TXT es una cadena de texto y el for recorre punto por punto
                                    String precioNuevo = precioTXT.replace(",", ".");
                                    Precio = Double.parseDouble(precioNuevo);
                                    aux = true;
                                }
                            }
                            //evaluar la condicion
                            if (aux == true) {
                                producto.setPrecio(Precio);
                            } else {
                                Precio = Double.parseDouble(precioTXT);
                                producto.setPrecio(Precio);
                            }
                              producto.setDescripcion(TextDescripcion.getText().trim());
                            //idProveedor - cargar metodo que obtiene el id de Proveedor
                            this.IdProveedor();
                            producto.setIdProveedor(obtenerIdProveedorCombo);
                            

                            if (controlProducto.guardar(producto)) {
                                JOptionPane.showMessageDialog(null, "Registro Guardado");
                                
                                

                                this.CargarComboProveedores();
                                this.Limpiar();
                            } else {
                                JOptionPane.showMessageDialog(null, "Error al Guardar");
                            }

                        } 
                    
                }
            } else {
                JOptionPane.showMessageDialog(null, "El producto ya existe en la Base de Datos");
            }
        }
    }//GEN-LAST:event_GuardarActionPerformed

    private void TextPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextPrecioActionPerformed

    private void TextDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextDescripcionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxProveedor;
    private javax.swing.JLabel Fondo;
    private javax.swing.JButton Guardar;
    private javax.swing.JTextField TextCantidad;
    private javax.swing.JTextField TextDescripcion;
    private javax.swing.JTextField TextNombre;
    private javax.swing.JTextField TextPrecio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    // End of variables declaration//GEN-END:variables
//metodo limpiar campos
    private void Limpiar(){
    TextNombre.setText("");
    TextDescripcion.setText("");
    TextCantidad.setText("");
    TextPrecio.setText("");
    }
    // Metodo para cargar los proveedores
  
    private void CargarComboProveedores() {
        java.sql.Connection cn = Conexion.conectar();
        String sql = "select * from Proveedor";
        java.sql.Statement st;

        try {

            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            ComboBoxProveedor.removeAllItems();
            ComboBoxProveedor.addItem("Seleccione proveedor:");
            while (rs.next()) {
                ComboBoxProveedor.addItem(rs.getString("empresa"));//es decir al combo box debe agregar todas las empresas de proveedores existentes
            }
            cn.close();

        } catch (SQLException e) {
            System.out.println("Error al cargar proveedores");
        }
    }

    /**
     *
     * Metodo para obtener id categoria
     */
    private int IdProveedor() {
        String sql = "select * from Proveedor where empresa = '" + this.ComboBoxProveedor.getSelectedItem() + "'";
        java.sql.Statement st;
        try {
            java.sql.Connection cn = Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                obtenerIdProveedorCombo = rs.getInt("idProveedor");
            }
        } catch (SQLException e) {
            System.out.println("Error al obener id proveedor");
        }
        return obtenerIdProveedorCombo;
    }
    
    
    
    
    
 


}


